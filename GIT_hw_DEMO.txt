JSON
 4. Создать внешний репозиторий c названием JSON.
(https://github.com/HerrscherOfCringe/JSON)

 5. Клонировать репозиторий JSON на локальный компьютер.
git clone https://github.com/HerrscherOfCringe/JSON.git

 6. Внутри локального JSON создать файл “new.json”.
touch new.json

 7. Добавить файл под гит.
 git add new.json

 8. Закоммитить файл.
git commit -m "add the first json file"

 9. Отправить файл на внешний GitHub репозиторий.
git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
vim new.json
i
{
        "Name":"Elena",
        "Age":25,
        "PetsNumber":3,
        "PrefSalary":120000
}

ESC
:wq

 11. Отправить изменения на внешний репозиторий.
git checkout main
git add new.json
git commit -m "bio info updated"
git push

 12. Создать файл preferences.json
touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 vim preferences.json

14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
touch sklls.json
vim sklls.json

 15. Отправить сразу 2 файла на внешний репозиторий.
git add preferences.json
git add skills.json
git commit -m "preferences and skills updated"
git push

 16. На веб интерфейсе создать файл bug_report.json.
На веб интерфейсе - кнопка Add file-Create new file 

17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
После изменений нажать Commit changes.

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
После нажатия на название файла, нажать на кнопку с карандашом и внести изменения.

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
После изменений нажать Commit changes.

 20. Синхронизировать внешний и локальный репозиторий JSON
git pull

XML
 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер.
 23. Внутри локального XML создать файл “new.xml”.
 24. Добавить файл под гит.
 25. Закоммитить файл.
 26. Отправить файл на внешний GitHub репозиторий.
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 28. Отправить изменения на внешний репозиторий.
 29. Создать файл preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
 32. Сделать коммит в одну строку.
 33. Отправить сразу 2 файла на внешний репозиторий.
 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML